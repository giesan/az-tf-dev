# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  name: azure
  vmImage: ubuntu-latest

variables:
  bkstrgrg: 'tfstateRG'
  bkstrg: 'tfstatestgscc71213'
  bkcontainer: 'tfstate'
  bkstrgkey: 'terraform.tfstate'

stages:
  - stage: tfdestroy
    jobs:
      - job: destroy
        steps:
          - task: TerraformInstaller@0
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV3@3
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'ServiceConnForServicePrincipalOwner'
              backendAzureRmResourceGroupName: '$(bkstrgrg)'
              backendAzureRmStorageAccountName: '$(bkstrg)'
              backendAzureRmContainerName: '$(bkcontainer)'
              backendAzureRmKey: '$(bkstrgkey)'
          - task: TerraformTaskV3@3
            displayName: plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'ServiceConnForServicePrincipalOwner'
          - task: TerraformTaskV3@3
            displayName: destroy
            inputs:
              provider: 'azurerm'
              command: 'destroy'
              environmentServiceNameAzureRM: 'ServiceConnForServicePrincipalOwner'
